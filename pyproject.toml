[tool.poetry]
name = "annotstein"
version = "v0.1.1.post0"
description = "Annotation tools for computer vision."
authors = ["Carlos Miranda <carlos.miralop@proton.me>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/CarMiranda/annotstein.git"


[tool.poetry.dependencies]
python = ">=3.10"
pillow = "^10.0.0"
pydantic = "^2.3.0"
typer = { version = "^0.9.0", optional = true }

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.4.0"
ruff = "^0.5.1"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.2"
coverage = "^7.3.1"

[tool.poetry.extras]
cli = ["typer"]

[tool.poetry.scripts]
annotstein = { reference = "annotstein.cli.main:app", type = "console" }

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = [
  "tests"
]

[tool.ruff]
# Enable the pycodestyle (`E`) and Pyflakes (`F`) rules by default.
lint.select = ["E", "F"]
lint.ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["ALL"]
lint.unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
lint.per-file-ignores = {}

# Same as Black.
line-length = 130

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.8
target-version = "py38"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
